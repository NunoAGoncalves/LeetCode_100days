//Runtime: 0 ms, faster than 100.00% of Java online submissions for Convert Binary Number in a Linked List to Integer.
//Memory Usage: 39.6 MB, less than 5.09% of Java online submissions for Convert Binary Number in a Linked List to Integer.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int lengthLinkedList(ListNode head) {
        
        int sum = 0;
        ListNode current = head;
        
        while (current != null) {
            current = current.next;
            sum += 1;
        }
        
        return sum;
    }
    
    public int getDecimalValue(ListNode head) {
        
        int length = lengthLinkedList(head) - 1; // return exact length of list e.g. [1,0,1,0] -> 4
        int sum = 0;
        
        ListNode current = head;
        
        while (current != null) {
            if (current.val == 1) {
                sum += Math.pow(2, length);
            }
            
            length -= 1;
            current = current.next;
        }
        
        return sum;
    }
    